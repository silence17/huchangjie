#name: 应用或包名称
name: flutter_module
#description: 应用或包的描述、简介。
description: A new Flutter module project.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
#
# This version is used _only_ for the Runner app, which is used if you just do
# a `flutter run` or a `flutter make-host-app-editable`. It has no impact
# on any other native host app that you embed your Flutter project into.
#version：应用或包的版本号
version: 1.0.0+1

environment:
  sdk: '>=3.0.0 <4.0.0'

#dependencies：应用或包依赖的其他包或插件。
#依赖包将作为App的源码的一部分参与编译，生成最终的安装包。
dependencies:
  flutter:
    sdk: flutter
  # 国际化
  flutter_localizations:
    sdk: flutter
  # 新添加的依赖
  english_words: ^4.0.0
  # 获取当前设备信息 https://github.com/fluttercommunity/plus_plugins/tree/main/packages/device_info_plus
  device_info_plus: 9.0.2
  # https://github.com/ReactiveX/rxdart
  rxdart: ^0.27.7
  # Toast插件 https://github.com/OpenFlutter/flutter_oktoast
  oktoast: ^3.3.1
  # Localization https://github.com/dart-lang/intl
  intl: ^0.18.0
  # 图片缓存 https://github.com/renefloor/flutter_cached_network_image
  cached_network_image: ^3.2.3
  # https://pub.dev/packages/shared_preferences
  shared_preferences: ^2.2.0
  synchronized: ^3.1.0
  # 刷新 https://github.com/xuelongqy/flutter_easy_refresh
  provider: ^6.0.5
  # 下拉上拉刷新 https://github.com/rrousselGit/provider
  easy_refresh: ^3.3.2+1
  # dart io库
  path_provider: ^2.0.2
  # 网络库 https://github.com/cfug/dio
  dio: ^5.2.1
  # json生成
  json_annotation: ^4.4.0
  # 路由框架 https://github.com/theyakka/fluro
  fluro: ^2.0.5
  # WebView插件 https://github.com/flutter/packages/tree/main/packages/webview_flutter
  # webview_flutter: 4.0.0

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

#开发环境依赖的工具包（而不是flutter应用本身依赖的包）
#依赖包只是作为开发阶段的一些工具包，主要是用于帮助我们提高开发、测试效率，比如 flutter 的自动化测试包等。
dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^2.0.0
  #build_runner 提供了一些用于生成文件的通用命令
  build_runner: ^2.1.8
  #json代码生成器
  json_serializable: ^6.1.5

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

#flutter：flutter相关的配置选项。
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  # 资源
  # 常见的资源类型包括静态数据（例如 JSON 文件），配置文件，图标和图片（JPEG，WebP，GIF，动画 WebP / GIF，PNG，BMP 和 WBMP）
  # 包含一个目录下的所有 assets，需要在目录名称的结尾加上 /
  # 在 pubspec.yaml 的 assets 部分中指定的资源路径，会在构建过程中，查找同级子目录中相同名称的任何文件。
  # 这些文件会与指定的资源一起被打包在资源 bundle 中。
  # 每个 asset 都通过相对于pubspec.yaml文件所在的文件系统路径来标识自身的路径。asset 的声明顺序是无关紧要的，asset的实际目录可以是任意文件夹（在本示例中是assets 文件夹）。
  assets:
    - assets/images/
    - assets/images/1.5x/

  # To add Flutter specific assets to your application, add an assets section,
  # like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add Flutter specific custom fonts to your application, add a fonts
  # section here, in this "flutter" section. Each entry in this list should
  # have a "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


  # This section identifies your Flutter project as a module meant for
  # embedding in a native host app.  These identifiers should _not_ ordinarily
  # be changed after generation - they are used to ensure that the tooling can
  # maintain consistency when adding or modifying assets and plugins.
  # They also do not have any bearing on your native host application's
  # identifiers, which may be completely independent or the same as these.
  module:
    androidX: true
    androidPackage: com.example.flutter_module
    iosBundleIdentifier: com.example.flutterModule
#国际化已经开启
flutter_intl:
  enabled: true
